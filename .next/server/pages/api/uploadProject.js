"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/uploadProject";
exports.ids = ["pages/api/uploadProject"];
exports.modules = {

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("mongoose");

/***/ }),

/***/ "(api)/./Models/Project.js":
/*!***************************!*\
  !*** ./Models/Project.js ***!
  \***************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst mongoose = __webpack_require__(/*! mongoose */ \"mongoose\");\nconst schema = mongoose.Schema;\nconst projSchema = new schema({\n    St_Date: {\n        type: [\n            Number\n        ],\n        required: true\n    },\n    Name_en: {\n        type: String,\n        required: true\n    },\n    Service_en: {\n        type: String,\n        required: true\n    },\n    Location_en: {\n        type: String,\n        required: true\n    },\n    Prj_Description_en: {\n        type: String,\n        required: true\n    },\n    Alt_Img_PP_en: {\n        type: String,\n        required: true\n    },\n    Second_Description_en: {\n        type: String,\n        required: true\n    },\n    Proj_Keywords_en: {\n        type: [\n            String\n        ],\n        required: true\n    },\n    Name_ar: {\n        type: String,\n        required: true\n    },\n    Service_ar: {\n        type: String,\n        required: true\n    },\n    Location_ar: {\n        type: String,\n        required: true\n    },\n    Prj_Description_ar: {\n        type: String,\n        required: true\n    },\n    Alt_Img_PP_ar: {\n        type: String,\n        required: true\n    },\n    Second_Description_ar: {\n        type: String,\n        required: true\n    },\n    Proj_Keywords_ar: {\n        type: [\n            String\n        ],\n        required: true\n    },\n    Coverimg: {\n        type: String,\n        required: true\n    },\n    Thumbnail: {\n        type: String,\n        required: true\n    },\n    Gallery: {\n        type: Array,\n        required: false\n    }\n}, {\n    timestamps: true\n});\n// Check if the model has already been defined\nconst Project = mongoose.models.Project || mongoose.model(\"Project\", projSchema);\nmodule.exports = Project;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9Nb2RlbHMvUHJvamVjdC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsV0FBV0MsbUJBQU9BLENBQUM7QUFDekIsTUFBTUMsU0FBU0YsU0FBU0csTUFBTTtBQUU5QixNQUFNQyxhQUFZLElBQUlGLE9BQU87SUFDekJHLFNBQVM7UUFDTEMsTUFBTTtZQUFDQztTQUFPO1FBQ2RDLFVBQVU7SUFDVjtJQUNKQyxTQUFTO1FBQ0xILE1BQU1JO1FBQ05GLFVBQVU7SUFDVjtJQUNKRyxZQUFZO1FBQ1JMLE1BQU1JO1FBQ05GLFVBQVU7SUFDVjtJQUNKSSxhQUFhO1FBQ1ROLE1BQU1JO1FBQ05GLFVBQVU7SUFDVjtJQUNKSyxvQkFBb0I7UUFDaEJQLE1BQU1JO1FBQ05GLFVBQVU7SUFDVjtJQUNKTSxlQUFlO1FBQ1hSLE1BQU1JO1FBQ05GLFVBQVU7SUFDVjtJQUNKTyx1QkFBdUI7UUFDbkJULE1BQU1JO1FBQ05GLFVBQVU7SUFDVjtJQUNKUSxrQkFBa0I7UUFDZFYsTUFBTTtZQUFDSTtTQUFPO1FBQ2RGLFVBQVU7SUFDVjtJQUNKUyxTQUFTO1FBQ0xYLE1BQU1JO1FBQ05GLFVBQVU7SUFDVjtJQUNKVSxZQUFZO1FBQ1JaLE1BQU1JO1FBQ05GLFVBQVU7SUFDVjtJQUNKVyxhQUFhO1FBQ1RiLE1BQU1JO1FBQ05GLFVBQVU7SUFDVjtJQUNKWSxvQkFBb0I7UUFDaEJkLE1BQU1JO1FBQ05GLFVBQVU7SUFDVjtJQUNKYSxlQUFlO1FBQ1hmLE1BQU1JO1FBQ05GLFVBQVU7SUFDVjtJQUNKYyx1QkFBdUI7UUFDbkJoQixNQUFNSTtRQUNORixVQUFVO0lBQ1Y7SUFDSmUsa0JBQWtCO1FBQ2RqQixNQUFNO1lBQUNJO1NBQU87UUFDZEYsVUFBVTtJQUNWO0lBQ0pnQixVQUFVO1FBQ05sQixNQUFNSTtRQUNORixVQUFVO0lBQ1Y7SUFDSmlCLFdBQVc7UUFDUG5CLE1BQU1JO1FBQ05GLFVBQVU7SUFDVjtJQUNKa0IsU0FBUztRQUNMcEIsTUFBTXFCO1FBQ05uQixVQUFVO0lBQ1Y7QUFBQyxHQUVEO0lBQUNvQixZQUFZO0FBQUk7QUFFekIsOENBQThDO0FBQzlDLE1BQU1DLFVBQVU3QixTQUFTOEIsTUFBTSxDQUFDRCxPQUFPLElBQUk3QixTQUFTK0IsS0FBSyxDQUFDLFdBQVczQjtBQUVyRTRCLE9BQU9DLE9BQU8sR0FBR0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kb2pvLWhlbHBkZXNrLy4vTW9kZWxzL1Byb2plY3QuanM/MDQ1NiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcbmNvbnN0IHNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcclxuXHJcbmNvbnN0IHByb2pTY2hlbWE9IG5ldyBzY2hlbWEoe1xyXG4gICAgU3RfRGF0ZToge1xyXG4gICAgICAgIHR5cGU6IFtOdW1iZXJdLFxyXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgfSxcclxuICAgIE5hbWVfZW46IHtcclxuICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgU2VydmljZV9lbjoge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgIH0sXHJcbiAgICBMb2NhdGlvbl9lbjoge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgIH0sICAgIFxyXG4gICAgUHJqX0Rlc2NyaXB0aW9uX2VuOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgfSxcclxuICAgIEFsdF9JbWdfUFBfZW46IHtcclxuICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgU2Vjb25kX0Rlc2NyaXB0aW9uX2VuOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgfSxcclxuICAgIFByb2pfS2V5d29yZHNfZW46IHtcclxuICAgICAgICB0eXBlOiBbU3RyaW5nXSxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgIH0sXHJcbiAgICBOYW1lX2FyOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgfSxcclxuICAgIFNlcnZpY2VfYXI6IHtcclxuICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgTG9jYXRpb25fYXI6IHtcclxuICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICB9LCAgICBcclxuICAgIFByal9EZXNjcmlwdGlvbl9hcjoge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgIH0sXHJcbiAgICBBbHRfSW1nX1BQX2FyOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgfSxcclxuICAgIFNlY29uZF9EZXNjcmlwdGlvbl9hcjoge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgIH0sXHJcbiAgICBQcm9qX0tleXdvcmRzX2FyOiB7XHJcbiAgICAgICAgdHlwZTogW1N0cmluZ10sXHJcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICB9LCBcclxuICAgIENvdmVyaW1nOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgfSxcclxuICAgIFRodW1ibmFpbDoge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgIH0sXHJcbiAgICBHYWxsZXJ5OiB7XHJcbiAgICAgICAgdHlwZTogQXJyYXksXHJcbiAgICAgICAgcmVxdWlyZWQ6IGZhbHNlXHJcbiAgICAgICAgfX0sXHJcblxyXG4gICAgICAgIHt0aW1lc3RhbXBzOiB0cnVlfSk7XHJcblxyXG4vLyBDaGVjayBpZiB0aGUgbW9kZWwgaGFzIGFscmVhZHkgYmVlbiBkZWZpbmVkXHJcbmNvbnN0IFByb2plY3QgPSBtb25nb29zZS5tb2RlbHMuUHJvamVjdCB8fCBtb25nb29zZS5tb2RlbCgnUHJvamVjdCcsIHByb2pTY2hlbWEpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBQcm9qZWN0OyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJzY2hlbWEiLCJTY2hlbWEiLCJwcm9qU2NoZW1hIiwiU3RfRGF0ZSIsInR5cGUiLCJOdW1iZXIiLCJyZXF1aXJlZCIsIk5hbWVfZW4iLCJTdHJpbmciLCJTZXJ2aWNlX2VuIiwiTG9jYXRpb25fZW4iLCJQcmpfRGVzY3JpcHRpb25fZW4iLCJBbHRfSW1nX1BQX2VuIiwiU2Vjb25kX0Rlc2NyaXB0aW9uX2VuIiwiUHJval9LZXl3b3Jkc19lbiIsIk5hbWVfYXIiLCJTZXJ2aWNlX2FyIiwiTG9jYXRpb25fYXIiLCJQcmpfRGVzY3JpcHRpb25fYXIiLCJBbHRfSW1nX1BQX2FyIiwiU2Vjb25kX0Rlc2NyaXB0aW9uX2FyIiwiUHJval9LZXl3b3Jkc19hciIsIkNvdmVyaW1nIiwiVGh1bWJuYWlsIiwiR2FsbGVyeSIsIkFycmF5IiwidGltZXN0YW1wcyIsIlByb2plY3QiLCJtb2RlbHMiLCJtb2RlbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./Models/Project.js\n");

/***/ }),

/***/ "(api)/./app/mdb/db.js":
/*!***********************!*\
  !*** ./app/mdb/db.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n// db.js\n\nconst dbURI = \"mongodb+srv://Dodo:586200@cluster0.x8wkalj.mongodb.net/Arabtec_dummy?retryWrites=true&w=majority\"; // Update with your MongoDB connection string\nconst connectDB = async ()=>{\n    try {\n        await mongoose__WEBPACK_IMPORTED_MODULE_0___default().connect(dbURI, {\n            socketTimeoutMS: 30000\n        });\n        console.log(\"Connected to MongoDB\");\n    } catch (error) {\n        console.error(\"Error connecting to MongoDB:\", error);\n        process.exit(1); // Exit process with failure\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (connectDB);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9hcHAvbWRiL2RiLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLFFBQVE7QUFDd0I7QUFFaEMsTUFBTUMsUUFBUSxvR0FBb0csNkNBQTZDO0FBRS9KLE1BQU1DLFlBQVk7SUFDZCxJQUFJO1FBQ0EsTUFBTUYsdURBQWdCLENBQUNDLE9BQU87WUFDMUJHLGlCQUFpQjtRQUNyQjtRQUNBQyxRQUFRQyxHQUFHLENBQUM7SUFDaEIsRUFBRSxPQUFPQyxPQUFPO1FBQ1pGLFFBQVFFLEtBQUssQ0FBQyxnQ0FBZ0NBO1FBQzlDQyxRQUFRQyxJQUFJLENBQUMsSUFBSSw0QkFBNEI7SUFDakQ7QUFDSjtBQUVBLGlFQUFlUCxTQUFTQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZG9qby1oZWxwZGVzay8uL2FwcC9tZGIvZGIuanM/Zjg5YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkYi5qc1xyXG5pbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xyXG5cclxuY29uc3QgZGJVUkkgPSAnbW9uZ29kYitzcnY6Ly9Eb2RvOjU4NjIwMEBjbHVzdGVyMC54OHdrYWxqLm1vbmdvZGIubmV0L0FyYWJ0ZWNfZHVtbXk/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5JzsgLy8gVXBkYXRlIHdpdGggeW91ciBNb25nb0RCIGNvbm5lY3Rpb24gc3RyaW5nXHJcblxyXG5jb25zdCBjb25uZWN0REIgPSBhc3luYyAoKSA9PiB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGF3YWl0IG1vbmdvb3NlLmNvbm5lY3QoZGJVUkksIHtcclxuICAgICAgICAgICAgc29ja2V0VGltZW91dE1TOiAzMDAwMCwgLy8gRXhhbXBsZTogSW5jcmVhc2Ugc29ja2V0IHRpbWVvdXQgdG8gMzAgc2Vjb25kc1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdDb25uZWN0ZWQgdG8gTW9uZ29EQicpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjb25uZWN0aW5nIHRvIE1vbmdvREI6JywgZXJyb3IpO1xyXG4gICAgICAgIHByb2Nlc3MuZXhpdCgxKTsgLy8gRXhpdCBwcm9jZXNzIHdpdGggZmFpbHVyZVxyXG4gICAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdERCO1xyXG4iXSwibmFtZXMiOlsibW9uZ29vc2UiLCJkYlVSSSIsImNvbm5lY3REQiIsImNvbm5lY3QiLCJzb2NrZXRUaW1lb3V0TVMiLCJjb25zb2xlIiwibG9nIiwiZXJyb3IiLCJwcm9jZXNzIiwiZXhpdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./app/mdb/db.js\n");

/***/ }),

/***/ "(api)/./pages/api/uploadProject.js":
/*!************************************!*\
  !*** ./pages/api/uploadProject.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _app_mdb_db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../app/mdb/db */ \"(api)/./app/mdb/db.js\");\n/* harmony import */ var _Models_Project_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Models/Project.js */ \"(api)/./Models/Project.js\");\n/* harmony import */ var _Models_Project_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Models_Project_js__WEBPACK_IMPORTED_MODULE_1__);\n// /api/projects.js\n//import connectDB from '../../app/mdb/db';\n//import multer from 'multer'; // Import multer\n//import Project from '../../Models/Project.js'; // Import your Mongoose model\n//\n//\n//\n//// Initialize multer middleware\n//const upload = multer({ dest: 'uploads/' }); // Specify the destination folder for uploaded files\n//\n//export const config = {\n//  api: {\n//    bodyParser: false, // Disable body parsing, as Multer will handle it\n//  },\n//};\n//\n//\n//export default async function handler(req, res) {\n//  // Connect to MongoDB\n//    await connectDB();\n//    if (req.method === 'POST') {\n//    try {\n//      // Use Multer middleware to handle file uploads\n//      upload.any()(req, res, async function (err) {\n//        if (err) {\n//          console.error('Error uploading files:', err);\n//          res.status(500).json({ success: false, error: 'Server Error' });\n//          return;\n//        }\n//        console.log(\"Body: \", req.body,\"Files lengths: \", req.files.length, \"Files: \", req.files);\n//        // Extract project data from req.body\n//        const {\n//          Month,\n//          Day,\n//          Year,\n//          Name_en,\n//          Service_en,\n//          Location_en,\n//          Prj_Description_en,\n//          Alt_Img_PP_en,\n//          Second_Description_en,\n//          Proj_Keywords_en,\n//          Name_ar,\n//          Service_ar,\n//          Location_ar,\n//          Prj_Description_ar,\n//          Alt_Img_PP_ar,\n//          Second_Description_ar,\n//          Proj_Keywords_ar,\n//          Coverimg,\n//          Thumbnail,\n//          Gallery\n//\n//        } = req.body;\n//\n//        // Create a new Project instance with the extracted data\n//        const project = new Project({\n//          St_Date: [Year,Month,Day],\n//          Name_en,\n//          Service_en,\n//          Location_en,\n//          Prj_Description_en,\n//          Alt_Img_PP_en,\n//          Second_Description_en,\n//          Proj_Keywords_en,\n//          Name_ar,\n//          Service_ar,\n//          Location_ar,\n//          Prj_Description_ar,\n//          Alt_Img_PP_ar,\n//          Second_Description_ar,\n//          Proj_Keywords_ar,\n//          Coverimg, // Save file paths to the project fields\n//          Thumbnail,\n//          Gallery\n//        });\n//        console.log(\"Project aho:\",project);\n//        // Save the project to the database\n//        await project.save().then(()=>{console.log(\"Saved!\");});\n//\n//        res.status(201).json({ success: true });\n//      });\n//    } catch (error) {\n//      console.error('Error creating project:', error);\n//      res.status(500).json({ success: false, error: 'Server Error' });\n//    }\n//  } else {\n//    res.status(405).json({ success: false, error: 'Method Not Allowed' });\n//  }\n//}\n\n // Import your Mongoose model\nconst config = {\n    api: {\n        bodyParser: true\n    }\n};\nasync function handler(req, res) {\n    // Connect to MongoDB\n    await (0,_app_mdb_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n    if (req.method === \"POST\") {\n        try {\n            // Extract project data from req.body\n            const { Day, Month, Year, Name_en, Service_en, Location_en, Prj_Description_en, Alt_Img_PP_en, Second_Description_en, Proj_Keywords_en, Name_ar, Service_ar, Location_ar, Prj_Description_ar, Alt_Img_PP_ar, Second_Description_ar, Proj_Keywords_ar, Coverimg, Thumbnail, Gallery } = req.body;\n            // Create a new Project instance with the extracted data\n            const project = new (_Models_Project_js__WEBPACK_IMPORTED_MODULE_1___default())({\n                St_Date: [\n                    Year,\n                    Month,\n                    Day\n                ],\n                Name_en,\n                Service_en,\n                Location_en,\n                Prj_Description_en,\n                Alt_Img_PP_en,\n                Second_Description_en,\n                Proj_Keywords_en,\n                Name_ar,\n                Service_ar,\n                Location_ar,\n                Prj_Description_ar,\n                Alt_Img_PP_ar,\n                Second_Description_ar,\n                Proj_Keywords_ar,\n                Coverimg,\n                Thumbnail,\n                Gallery\n            });\n            // Save the project to the database\n            await project.save().then(()=>{\n                console.log(\"Saved!\\n\", project);\n            });\n            res.status(201).json({\n                success: true\n            });\n        } catch (error) {\n            console.error(\"Error creating project:\", error);\n            res.status(500).json({\n                success: false,\n                error: \"Server Error\"\n            });\n        }\n    } else {\n        res.status(405).json({\n            success: false,\n            error: \"Method Not Allowed\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/uploadProject.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/uploadProject.js"));
module.exports = __webpack_exports__;

})();